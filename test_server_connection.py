#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∏–∫–µ—Ä–æ–≤
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤—Å–µ—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ API
"""

import requests
import json
import time
from typing import Dict, Any

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞
BASE_URL = "https://muslimaikeyboard.tech"
TIMEOUT = 30  # —Å–µ–∫—É–Ω–¥

def test_endpoint(method: str, endpoint: str, data: Dict[Any, Any] = None) -> Dict[str, Any]:
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç"""
    url = f"{BASE_URL}{endpoint}"
    
    print(f"\nüîç Testing {method} {url}")
    
    try:
        if method == "GET":
            response = requests.get(url, timeout=TIMEOUT)
        elif method == "POST":
            headers = {"Content-Type": "application/json"}
            response = requests.post(url, json=data, headers=headers, timeout=TIMEOUT)
        elif method == "HEAD":
            response = requests.head(url, timeout=TIMEOUT)
        elif method == "OPTIONS":
            response = requests.options(url, timeout=TIMEOUT)
        else:
            return {"success": False, "error": f"Unsupported method: {method}"}
        
        result = {
            "success": True,
            "status_code": response.status_code,
            "headers": dict(response.headers),
            "response_time": response.elapsed.total_seconds()
        }
        
        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å JSON –æ—Ç–≤–µ—Ç
        try:
            if response.text:
                result["json"] = response.json()
            else:
                result["json"] = None
        except:
            result["text"] = response.text[:200] if response.text else ""
        
        print(f"‚úÖ Status: {response.status_code}")
        print(f"‚è±Ô∏è Response time: {response.elapsed.total_seconds():.2f}s")
        
        return result
        
    except requests.exceptions.Timeout:
        print(f"‚ùå Timeout after {TIMEOUT}s")
        return {"success": False, "error": "Timeout"}
    except requests.exceptions.ConnectionError as e:
        print(f"‚ùå Connection error: {e}")
        return {"success": False, "error": f"Connection error: {e}"}
    except Exception as e:
        print(f"‚ùå Error: {e}")
        return {"success": False, "error": str(e)}

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∏–∫–µ—Ä–æ–≤")
    print(f"üåê Server URL: {BASE_URL}")
    print(f"‚è∞ Timeout: {TIMEOUT}s")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤–∞—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
    print("\n1Ô∏è‚É£ –¢–µ—Å—Ç –±–∞–∑–æ–≤–æ–π –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞")
    base_result = test_endpoint("GET", "/")
    
    # –¢–µ—Å—Ç 2: Health endpoint
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç /health endpoint")
    health_result = test_endpoint("GET", "/health")
    
    # –¢–µ—Å—Ç 3: Test endpoint
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç /test endpoint")
    test_result = test_endpoint("GET", "/test")
    
    # –¢–µ—Å—Ç 4: Examples endpoint
    print("\n4Ô∏è‚É£ –¢–µ—Å—Ç /examples endpoint")
    examples_result = test_endpoint("GET", "/examples")
    
    # –¢–µ—Å—Ç 5: Generate-sticker OPTIONS (CORS)
    print("\n5Ô∏è‚É£ –¢–µ—Å—Ç /generate-sticker OPTIONS (CORS)")
    cors_result = test_endpoint("OPTIONS", "/generate-sticker")
    
    # –¢–µ—Å—Ç 6: Generate-sticker HEAD
    print("\n6Ô∏è‚É£ –¢–µ—Å—Ç /generate-sticker HEAD")
    head_result = test_endpoint("HEAD", "/generate-sticker")
    
    # –¢–µ—Å—Ç 7: Generate-sticker POST (—Ä–µ–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å)
    print("\n7Ô∏è‚É£ –¢–µ—Å—Ç /generate-sticker POST")
    sticker_data = {
        "phrase": "bismillah",
        "username": "test_user"
    }
    sticker_result = test_endpoint("POST", "/generate-sticker", sticker_data)
    
    # –†–µ–∑—é–º–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    print("\n" + "=" * 50)
    print("üìä –†–ï–ó–Æ–ú–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 50)
    
    tests = [
        ("Base URL", base_result),
        ("Health", health_result),
        ("Test", test_result),
        ("Examples", examples_result),
        ("CORS Options", cors_result),
        ("Head Request", head_result),
        ("Sticker Generation", sticker_result)
    ]
    
    successful_tests = 0
    for name, result in tests:
        status = "‚úÖ" if result.get("success") else "‚ùå"
        status_code = result.get("status_code", "N/A")
        response_time = result.get("response_time", 0)
        
        print(f"{status} {name:<20} | Status: {status_code} | Time: {response_time:.2f}s")
        
        if result.get("success"):
            successful_tests += 1
        else:
            error = result.get("error", "Unknown error")
            print(f"   Error: {error}")
    
    print(f"\nüìà –£—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: {successful_tests}/{len(tests)}")
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    print("\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    
    if successful_tests == 0:
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("   - –ó–∞–ø—É—â–µ–Ω –ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–∞ http://207.154.222.27")
        print("   - –î–æ—Å—Ç—É–ø–µ–Ω –ª–∏ —Å–µ—Ä–≤–µ—Ä –∏–∑ –≤–∞—à–µ–π —Å–µ—Ç–∏")
        print("   - –ù–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç –ª–∏ firewall –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
    elif successful_tests < len(tests):
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã:")
        for name, result in tests:
            if not result.get("success"):
                print(f"   - {name}: {result.get('error', 'Unknown error')}")
    else:
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("   - –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("   - –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∏–∫–µ—Ä–æ–≤")
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è iOS —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    print("\nüì± –î–õ–Ø iOS –†–ê–ó–†–ê–ë–û–¢–ö–ò:")
    print(f"   - Base URL –≤ APIConfig.swift: \"{BASE_URL}\"")
    print(f"   - Timeout —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: 120 —Å–µ–∫—É–Ω–¥")
    print(f"   - CORS –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è: {'‚úÖ' if cors_result.get('success') else '‚ùå'}")

if __name__ == "__main__":
    main()
