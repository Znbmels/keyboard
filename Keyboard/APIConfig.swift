//
//  APIConfig.swift
//  Keyboard
//
//  Created by Zainab on 10.07.2025.
//

import Foundation

struct APIConfig {
    // MARK: - API Configuration
    
    /// Base URL –¥–ª—è API —Å–µ—Ä–≤–µ—Ä–∞
    /// –ò–∑–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π URL —Å–µ—Ä–≤–µ—Ä–∞
    static let baseURL: String = {
        #if DEBUG
        // –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ - –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä —Å SSL
        return "https://muslimaikeyboard.tech"
        #else
        // –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ - –≤–∞—à —Å–µ—Ä–≤–µ—Ä —Å SSL
        return "https://muslimaikeyboard.tech"
        #endif
    }()
    
    /// –¢–∞–π–º–∞—É—Ç –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
    static let requestTimeout: TimeInterval = 180.0 // 3 –º–∏–Ω—É—Ç—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∏–∫–µ—Ä–æ–≤ (—Å–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ ~26 —Å–µ–∫—É–Ω–¥)
    
    /// –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ (–≤ –±–∞–π—Ç–∞—Ö)
    static let maxImageSize: Int = 10 * 1024 * 1024 // 10 MB
    
    /// User Agent –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤
    static let userAgent = "Muslim AI Keyboard iOS/1.0"
    
    /// –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    static let maxRetryAttempts = 3
    
    /// –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
    static let retryDelay: TimeInterval = 2.0
    
    // MARK: - API Endpoints
    
    enum Endpoint: String {
        case health = "/health"
        case generateSticker = "/generate-sticker"
        case examples = "/examples"
        
        var url: URL? {
            return URL(string: APIConfig.baseURL + self.rawValue)
        }
    }
    
    // MARK: - Development Settings
    
    /// –í–∫–ª—é—á–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ API –∑–∞–ø—Ä–æ—Å–æ–≤
    static let enableVerboseLogging: Bool = {
        #if DEBUG
        return true
        #else
        return false
        #endif
    }()
    
    /// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å fallback —Ä–µ–∂–∏–º –µ—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
    static let enableFallbackMode = true
    
    /// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ API –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    static let autoCheckHealth = false
    
    // MARK: - Helper Methods
    
    /// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ URL –≤–∞–ª–∏–¥–Ω—ã–º
    static func isValidURL(_ urlString: String) -> Bool {
        guard let url = URL(string: urlString) else { return false }
        return url.scheme != nil && url.host != nil
    }
    
    /// –ü–æ–ª—É—á–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤
    static func defaultHeaders() -> [String: String] {
        let languageCode: String
        if #available(iOS 16.0, *) {
            languageCode = Locale.current.language.languageCode?.identifier ?? "en"
        } else {
            languageCode = Locale.current.languageCode ?? "en"
        }

        return [
            "Content-Type": "application/json",
            "User-Agent": userAgent,
            "Accept": "application/json",
            "Accept-Language": languageCode
        ]
    }
    
    /// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    static func log(_ message: String, level: LogLevel = .info) {
        guard enableVerboseLogging else { return }
        
        let timestamp = DateFormatter.logFormatter.string(from: Date())
        let prefix = level.prefix
        
        print("[\(timestamp)] \(prefix) API: \(message)")
    }
    
    enum LogLevel {
        case info, warning, error, success
        
        var prefix: String {
            switch self {
            case .info: return "‚ÑπÔ∏è"
            case .warning: return "‚ö†Ô∏è"
            case .error: return "‚ùå"
            case .success: return "‚úÖ"
            }
        }
    }
}

// MARK: - Extensions

extension DateFormatter {
    static let logFormatter: DateFormatter = {
        let formatter = DateFormatter()
        formatter.dateFormat = "HH:mm:ss.SSS"
        return formatter
    }()
}

// MARK: - API Configuration Instructions

/*
 üìã –ù–ê–°–¢–†–û–ô–ö–ê API –°–ï–†–í–ï–†–ê:
 
 1. –¢–ï–ö–£–©–ò–ô –°–ï–†–í–ï–†:
    - –°–µ—Ä–≤–µ—Ä —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç –Ω–∞ https://muslimaikeyboard.tech
    - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É https://muslimaikeyboard.tech
    - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç /health: curl https://muslimaikeyboard.tech/health
 
 2. –ü–†–û–î–ê–ö–®–ï–ù:
    - –ò–∑–º–µ–Ω–∏—Ç–µ baseURL –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
    - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç HTTPS
    - –ù–∞—Å—Ç—Ä–æ–π—Ç–µ CORS –¥–ª—è iOS –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 
 3. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API:
    - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /health –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
    - –¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ /generate-sticker —Å –ø—Ä–æ—Å—Ç—ã–º–∏ —Ñ—Ä–∞–∑–∞–º–∏
    - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ /examples –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∏–º–µ—Ä–æ–≤
 
 4. –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨:
    - –î–æ–±–∞–≤—å—Ç–µ API –∫–ª—é—á–∏ –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
    - –ù–∞—Å—Ç—Ä–æ–π—Ç–µ rate limiting –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ HTTPS –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
 
 5. –ú–û–ù–ò–¢–û–†–ò–ù–ì:
    - –í–∫–ª—é—á–∏—Ç–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ DEBUG —Ä–µ–∂–∏–º–µ
    - –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –æ—à–∏–±–∫–∏ –∏ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞
    - –ù–∞—Å—Ç—Ä–æ–π—Ç–µ fallback —Ä–µ–∂–∏–º –¥–ª—è –æ—Ñ–ª–∞–π–Ω —Ä–∞–±–æ—Ç—ã
 
 üì± –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï –í –ü–†–ò–õ–û–ñ–ï–ù–ò–ò:
 
 // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API
 let isHealthy = await StickerAPIService.shared.checkAPIHealth()
 
 // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∏–∫–µ—Ä–∞
 let result = try await StickerAPIService.shared.generateSticker(phrase: "–±–∏—Å–º–∏–ª–ª–∞—Ö")
 
 // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤
 let examples = try await StickerAPIService.shared.getExamples()
 
 üîß –û–¢–õ–ê–î–ö–ê:
 
 - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å Xcode –Ω–∞ –Ω–∞–ª–∏—á–∏–µ API –ª–æ–≥–æ–≤
 - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω
 - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ—Ç–µ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏–º—É–ª—è—Ç–æ—Ä–∞/—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
 - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Network Link Conditioner –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–µ–¥–ª–µ–Ω–Ω–æ–π —Å–µ—Ç–∏
 
 ‚ö†Ô∏è –í–ê–ñ–ù–û:
 
 - –í —Å–∏–º—É–ª—è—Ç–æ—Ä–µ iOS localhost —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ Mac, –∞ –Ω–µ –Ω–∞ —Å–∏–º—É–ª—è—Ç–æ—Ä
 - –ù–∞ —Ä–µ–∞–ª—å–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ IP –∞–¥—Ä–µ—Å Mac –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ firewall –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É
 */
